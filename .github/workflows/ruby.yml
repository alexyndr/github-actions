# env:
#   POSTGRES_DB: todo_list_api_test

name: CI
on:
  push:
    branches: [ feature/git-actions ]
  pull_request:
    branches: ['*']

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:@localhost:5432/test
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      RAILS_ENV: test
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Clone repo
      uses: actions/checkout@v1
    - name: Setup Ruby and dependencies
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
    - name: Install db client
      # env:
      #   RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      #   POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      #   RAILS_ENV: test
      run: sudo apt-get install libpq-dev
    # - name: Install dependencies
    #   run: |
    #     gem install bundler
    #     bundle install --jobs 4 --retry 3
    - name: Create database
      # run: |
      #   bundle exec rails db:create RAILS_ENV=test
      #   bundle exec rails db:migrate RAILS_ENV=test
      run: bundle exec rails db:prepare
    - name: RuboCop Linter Action
      uses: andrewmcodes/rubocop-linter-action@v3.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Run specs
      run: bundle exec rspec
    - name: Upload coverage result
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: coverage-report
        path: coverage
